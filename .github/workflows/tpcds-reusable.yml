name: TPC-DS Reusable

on:
  workflow_call:
    inputs:
      sparkver:
        required: true
        type: string
      sparkurl:
        required: true
        type: string
      javaver:
        required: false
        type: string
        default: '8'
      extrablazebuildopt:
        required: false
        type: string
        default: ''
      extrablazeidentifier:
        required: false
        type: string
        default: ''
      extrasparkconf:
        required: false
        type: string
        default: ''
      queries:
        required: false
        type: string
        default: '["q1,q2,q3,q4,q5,q6,q7,q8,q9"]'

jobs:
  build-validator:
    name: Build Validator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v4
        id: cache-tpcds-validator
        with:
          key: tpcds-validator
          path: target/tpcds-validator_2.12-0.1.0-SNAPSHOT-with-dependencies.jar

      - uses: actions/checkout@v4
        if: steps.cache-tpcds-validator.outputs.cache-hit != 'true'
        with:
          repository: blaze-init/tpcds-validator

      - uses: actions/setup-java@v4
        if: steps.cache-tpcds-validator.outputs.cache-hit != 'true'
        with:
          distribution: 'adopt-hotspot'
          java-version: ${{ inputs.javaver }}
          cache: 'maven'

      - name: Build
        if: steps.cache-tpcds-validator.outputs.cache-hit != 'true'
        run: mvn package -DskipTests

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tpcds-validator-${{ inputs.sparkver }}-jdk-${{ inputs.javaver }}
          path: target/tpcds-validator_2.12-0.1.0-SNAPSHOT-with-dependencies.jar
          overwrite: true

  build-blaze-jar:
    name: Build Blaze JAR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt-hotspot'
          java-version: ${{ inputs.javaver }}
          cache: 'maven'

      - uses: arduino/setup-protoc@v2
        with:
          version: "21.7"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          rustflags: --allow warnings -C target-feature=+aes
          components:
            cargo
            rustfmt

      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

      - name: Cargo test
        run: cargo +nightly test --workspace --all-features

      - name: Build ${{ inputs.sparkver }} jdk-${{ inputs.javaver }}
        run: mvn package -Ppre -P${{ inputs.sparkver }} -Pjdk-${{ inputs.javaver }} ${{ inputs.extrablazebuildopt }}

      - name: Upload ${{ inputs.sparkver }} jdk-${{ inputs.javaver }}
        uses: actions/upload-artifact@v4
        with:
          name: blaze-engine-${{ inputs.sparkver }}-jdk-${{ inputs.javaver }}${{ inputs.extrablazeidentifier }}
          path: target/blaze-engine-${{ inputs.sparkver }}-pre-*-SNAPSHOT.jar
          overwrite: true

  run-tpcds-test:
    name: Run TPC-DS test ${{ matrix.query }}
    needs: [build-validator, build-blaze-jar]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        query: ${{ fromJson(inputs.queries) }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        id: cache-spark-bin
        with:
          path: spark-bin-${{ inputs.sparkver }}
          key: spark-bin-${{ inputs.sparkver }}

      - name: Setup ${{ inputs.sparkver }}
        id: setup-spark-bin
        if: steps.cache-spark-bin.outputs.cache-hit != 'true'
        run: |
          wget -c ${{ inputs.sparkurl }}
          mkdir -p spark-bin-${{ inputs.sparkver }}
          cd spark-bin-${{ inputs.sparkver }} && tar -xf ../spark-*.tgz --strip-component=1

      - uses: actions/download-artifact@v4
        with:
          name: blaze-engine-${{ inputs.sparkver }}-jdk-${{ inputs.javaver }}${{ inputs.extrablazeidentifier }}

      - uses: actions/download-artifact@v4
        with:
          name: tpcds-validator-${{ inputs.sparkver }}-jdk-${{ inputs.javaver }}

      - name: Checkout TPC-DS Data
        uses: actions/checkout@v4
        with:
          repository: blaze-init/tpcds_1g
          path: dev/tpcds_1g

      - name: Install Blaze JAR
        run: |
          ls -la
          cp blaze-engine-*${{ inputs.sparkver }}*.jar spark-bin-${{ inputs.sparkver }}/jars/

      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt-hotspot'
          java-version: ${{ inputs.javaver }}
          cache: 'maven'

      - name: Run
        run: |
          ls -la
          export RUST_LOG=ERROR
          export RUST_BACKTRACE=1
          export SPARK_PRINT_LAUNCH_COMMAND=1
          SPARK_HOME=spark-bin-${{ inputs.sparkver }} dev/run-tpcds-test \
            ${{ inputs.extrasparkconf }} \
            --data-location dev/tpcds_1g \
            --query-filter ${{ matrix.query }}
